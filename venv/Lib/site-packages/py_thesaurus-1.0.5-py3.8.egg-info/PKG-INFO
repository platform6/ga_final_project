Metadata-Version: 1.1
Name: py-thesaurus
Version: 1.0.5
Summary: To fetch the thesaurus of an input word
Home-page: https://bitbucket.org/redpills01/py_thesaurus.git
Author: red_pills
Author-email: redpillsworkspace@gmail.com
License: MIT
Description: **PyThesaurus**
        ***************
        |build-status|  
        
        Obituary 
        """""""""  
        
        **PyThesaurus**
        
        (31st Dec 2017 - 4th Aug 2018)
        
        With great grief and sorrow, Redpills mourn the demise of Pythesaurus - A pip package which gets you the thesaurus of an inputted word from the best dictionary sites available online. 
        
        At the core, she was a web scraper. A good one. She helped numerous developers out there to meet the needs on NLP, Text processing and Mining. They fell head over heels for her. She made us proud by serving her purpose for them. 
        
        But at the end of the day, being a scraper was her biggest weakness as well. She can't be scaled to production. Moreover, the sites she hunted in the past with great fury, gradually changed. She became a dull blade to get information from them. At her death bed, she crashed multiple times and faced a barrage of criticism.
        
        You were our first kiddo. Like Bilal for Mary Teacher. You'll be remembered forever.
        
        Rest in peace dear one! We will miss you! 
        
        Team 
        
        Workaround
        """""""""""
        
        Though she will kept at PyPI, there won't be any further updates or support from the team. You may use Oxford Dictionary API for your purpose in future.)
        Link: https://developer.oxforddictionaries.com/  
        
        Description
        """""""""""
        
        This package gets you the thesaurus of an inputted word from the best dictionary sites available online. 
        
        - `Thesaurus.com <http: www.thesaurus.com=""/>`_
        
        - `Dictionary.com <http: www.dictionary.com=""/>`_  
        
        Why you need this package?
        """"""""""""""""""""""""""
        
        Though python provides lexical resources like WordNet, the variety it can provide is poor. The rich content the `dictionary.com` or the `thesaurus.com` provides will help the user to enhance their approaches when he/she is dealing with text mining, NLP techniques and much more.  
        
        How to install? 
        """""""""""""""
        
        Use basic pip install to install this library.  
        ::
        
          pip install py_thesaurus  
        
        Release Notes
        """""""""""""
        
        Version 1.0.4 (2018-04-03)
        --------------------------
        
        - A good samaritan of us named Mr. mpkasa spotted an `UnboundedLocalError` rat.  	
        
        "By the breath of God they perish, And by the blast of His anger they come to an end" - Job Chapter 4 Verse 9
        
        Version 1.0.3 (2018-01-13)
        --------------------------
        
        - Solved dependency issue of `lxml`. 
        - Fixed a bug on command line implementation. 
        - Issue tracker link is added in README to report bugs and suggests features.
        
        
        Version 1.0 (2017-12-31)
        ------------------------
        
        - Sometimes you need to disagree in life, we added a feature to get antonyms of an inputted word.
        - Synonyms are not a pile of related words anymore. You want synonyms of ‘love’ as a ‘noun’, you get synonyms of ‘love’ as a ‘noun’. Period.
        - We love everyone being one of a kind, there will not be any duplicates in output lists anymore.
        - Output lists are more refined and ordered by relevance since disciplined is new sexy. 
        - 0.95 is a decimal but 0.9.5 has a meaning in software development. We got it late but happily adapted to Semantic Versioning.
        - Several other bugs are brutally killed during the development of this package. No prayers.
        
        How to use PyThesaurus?
        """""""""""""""""""""""
        
        1. From python shell 
        --------------------
        ::
        
           from py_thesaurus import Thesaurus
        
           input_word = "dream"
        
           new_instance = Thesaurus(input_word)
        
           # Get the synonyms according to part of speech
           # Default part of speech is noun
        
           print(new_instance.get_synonym()) 
           
           print(new_instance.get_synonym(pos='verb'))
        
           print(new_instance.get_synonym(pos='adj'))
           
           # Get the definitions 
        
           print(new_instance.get_definition())
        
           # Get the antonyms 
        
           print(new_instance.get_antonym())
        
        2. From command line
        --------------------
        
        Positional arguments
        ::
        
          word --> Word to get definition/synonym/antonym for
        
        
        Optional arguments
        ::
        
          -h or --help       Show this help message and exit
          -d                 get definition
          -s {noun,verb,adj} get POS specific synonyms
          -a                 get antonyms
        
        Command
        ::
        
           py_thesaurus [-h] [-d] [-s {noun,verb,adj}] [-a] word
        
           py_thesaurus -d -s verb -a dream
        
        
        Contact
        """""""
        
        
        Bitbucket: https://bitbucket.org/redpills01/py_thesaurus.git .
        
        Issue tracker: https://bitbucket.org/redpills01/py_thesaurus/issues .                            
        
        email: redpillsworkspace@gmail.com   
        
        ---------------------------------------------------------------------------------
        
        Made with Love by Redpills :) 
        
        .. |build-status| image:: https://redpillsworkspace.visualstudio.com/_apis/public/build/definitions/ab439b9d-52c8-4080-94cd-f72bbd1aa1db/2/badge
            :alt: build status
            :scale: 100%
            :target: https://bitbucket.org/redpills01/py_thesaurus/issues
        
Keywords: nlp text-mining
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Manufacturing
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Topic :: Text Processing :: Linguistic
